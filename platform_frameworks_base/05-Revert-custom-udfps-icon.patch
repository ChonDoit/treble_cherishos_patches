From 57524fde7386ffdbb0fdea56a4a8ce3d0140d391 Mon Sep 17 00:00:00 2001
From: ChonDoit <thphantomblog@gmail.com>
Date: Mon, 11 Jul 2022 23:34:38 +0000
Subject: [PATCH] Revert "base: Custom(User Selected) UDFPS Icon [1/2]"

This reverts commit 8d7c863120411a6c006fe4cec16fc1c4b6a72908.
---
 core/java/android/provider/Settings.java      | 10 ---
 .../systemui/biometrics/UdfpsController.java  |  1 +
 .../systemui/biometrics/UdfpsDrawable.java    | 69 +------------------
 .../biometrics/UdfpsKeyguardView.java         | 19 +----
 4 files changed, 5 insertions(+), 94 deletions(-)

diff --git a/core/java/android/provider/Settings.java b/core/java/android/provider/Settings.java
index 8f6ca6656d69..570b81f3cbc8 100644
--- a/core/java/android/provider/Settings.java
+++ b/core/java/android/provider/Settings.java
@@ -6230,11 +6230,6 @@ public final class Settings {
          */
         public static final String UDFPS_ICON = "udfps_icon";
 		
-		/**
-         * @hide
-         */
-        public static final String OMNI_CUSTOM_FP_ICON_ENABLED = "custom_fp_icon_enabled";
-
         /**
          * boolean value. toggles using arrow key locations on nav bar
          * as left and right dpad keys
@@ -6372,11 +6367,6 @@ public final class Settings {
         public static final String RIGHT_VERTICAL_BACK_SWIPE_APP_ACTIVITY_ACTION = "right_vertical_back_swipe_app_activity_action";
 
 
-        /**
-         * @hide
-         */
-        public static final String OMNI_CUSTOM_FP_ICON = "custom_fingerprint_icon";
-		
 		/**
          * Which Vibration Pattern to use
          * 0: dzzz-dzzz
diff --git a/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsController.java b/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsController.java
index a2b5ec662970..644b2f378eeb 100644
--- a/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsController.java
+++ b/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsController.java
@@ -687,6 +687,7 @@ public class UdfpsController implements DozeReceiver, UdfpsHbmProvider {
         if (CherishUtils.isPackageInstalled(mContext, "com.cherish.udfps.resources")) {
             mUdfpsAnimation = new UdfpsAnimation(mContext, mWindowManager, mSensorProps);
         }
+    }
 
         mUdfpsVendorCode = mContext.getResources().getInteger(R.integer.config_udfps_vendor_code);
         mSystemSettings = systemSettings;
diff --git a/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsDrawable.java b/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsDrawable.java
index e7dac7acef93..7bdddce2e1f4 100644
--- a/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsDrawable.java
+++ b/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsDrawable.java
@@ -19,9 +19,6 @@ package com.android.systemui.biometrics;
 import android.content.Context;
 import android.content.res.Resources;
 import android.content.pm.PackageManager;
-import android.graphics.Bitmap;
-import android.graphics.BitmapFactory;
-import android.graphics.drawable.BitmapDrawable;
 import android.graphics.ColorFilter;
 import android.graphics.Paint;
 import android.graphics.Rect;
@@ -29,13 +26,7 @@ import android.graphics.RectF;
 import android.graphics.drawable.Drawable;
 import android.graphics.drawable.ShapeDrawable;
 import android.graphics.drawable.shapes.PathShape;
-import android.net.Uri;
-import android.os.Handler;
-import android.os.ParcelFileDescriptor;
-import android.os.RemoteException;
-import android.os.UserHandle;
 import android.provider.Settings;
-import android.text.TextUtils;
 import android.util.PathParser;
 
 import androidx.annotation.NonNull;
@@ -47,15 +38,6 @@ import com.android.systemui.Dependency;
 import com.android.systemui.R;
 import com.android.systemui.tuner.TunerService;
 
-import java.io.File;
-import java.io.FileDescriptor;
-import java.io.FileOutputStream;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.PrintWriter;
-import java.util.ArrayList;
-import java.util.List;
-
 /**
  * Abstract base class for drawable displayed when the finger is not touching the
  * sensor area.
@@ -73,7 +55,6 @@ public abstract class UdfpsDrawable extends Drawable {
     private boolean mIlluminationShowing;
 
     int mSelectedIcon = 0;
-    private boolean mCustomFpIconEnabled;
 
     int mAlpha = 255; // 0 - 255
 
@@ -96,7 +77,7 @@ public abstract class UdfpsDrawable extends Drawable {
         init();
     }
 
-    /**void init() {
+    void init() {
         if (CherishUtils.isPackageInstalled(mContext, udfpsResourcesPackage)) {
             try {
                 PackageManager pm = mContext.getPackageManager();
@@ -120,54 +101,6 @@ public abstract class UdfpsDrawable extends Drawable {
             Dependency.get(TunerService.class).addTunable(tunable, UDFPS_ICON);
         }
     }
-*/
-    void init() {
-        mCustomFpIconEnabled = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.OMNI_CUSTOM_FP_ICON_ENABLED, 0) == 1;
-
-        final String customIconURI = Settings.System.getStringForUser(mContext.getContentResolver(),
-                Settings.System.OMNI_CUSTOM_FP_ICON,
-                UserHandle.USER_CURRENT);
-
-        if (CherishUtils.isPackageInstalled(mContext, udfpsResourcesPackage)) {
-            try {
-                PackageManager pm = mContext.getPackageManager();
-                udfpsRes = pm.getResourcesForApplication(udfpsResourcesPackage);
-            } catch (PackageManager.NameNotFoundException e) {
-                e.printStackTrace();
-            }
-
-            int res = udfpsRes.getIdentifier("udfps_icons",
-                    "array", udfpsResourcesPackage);
-            mUdfpsIcons = udfpsRes.getStringArray(res);
-
-            TunerService.Tunable tunable = (key, newValue) -> {
-                if (UDFPS_ICON.equals(key)) {
-                    mSelectedIcon = newValue == null ? 0 : Integer.parseInt(newValue);
-                }
-            };
-            Dependency.get(TunerService.class).addTunable(tunable, UDFPS_ICON);
-        }
-        if (!TextUtils.isEmpty(customIconURI) && mCustomFpIconEnabled) {
-            try {
-                ParcelFileDescriptor parcelFileDescriptor =
-                    mContext.getContentResolver().openFileDescriptor(Uri.parse(customIconURI), "r");
-                FileDescriptor fileDescriptor = parcelFileDescriptor.getFileDescriptor();
-                Bitmap image = BitmapFactory.decodeFileDescriptor(fileDescriptor);
-                parcelFileDescriptor.close();
-                mUdfpsDrawable = new BitmapDrawable(mContext.getResources(), image);
-            }
-            catch (Exception e) {
-                mUdfpsDrawable = mSelectedIcon == 0 ? null :
-                        loadDrawable(udfpsRes,
-                                mUdfpsIcons[mSelectedIcon]);
-            }
-        } else {
-            mUdfpsDrawable = mSelectedIcon == 0 ? null :
-                    loadDrawable(udfpsRes,
-                            mUdfpsIcons[mSelectedIcon]);
-        }
-    }
 
     void setStrokeWidth(float strokeWidth) {
         mPaint.setStrokeWidth(strokeWidth);
diff --git a/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsKeyguardView.java b/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsKeyguardView.java
index 9e54613aad28..206a83d28598 100644
--- a/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsKeyguardView.java
+++ b/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsKeyguardView.java
@@ -26,11 +26,9 @@ import android.animation.ObjectAnimator;
 import android.content.Context;
 import android.graphics.PorterDuff;
 import android.graphics.PorterDuffColorFilter;
-import android.os.UserHandle;
 import android.provider.Settings;
 import android.util.AttributeSet;
 import android.util.MathUtils;
-import android.text.TextUtils;
 import android.view.View;
 import android.widget.ImageView;
 
@@ -73,8 +71,6 @@ public class UdfpsKeyguardView extends UdfpsAnimationView {
     private float mInterpolatedDarkAmount;
 
     private boolean mCustomUdfpsIcon;
-    private boolean mCustomFpIconEnabled;
-    private String customIconURI;
 
     public UdfpsKeyguardView(Context context, @Nullable AttributeSet attrs) {
         super(context, attrs);
@@ -128,14 +124,7 @@ public class UdfpsKeyguardView extends UdfpsAnimationView {
                 Settings.System.UDFPS_ICON, 0) != 0
                 && CherishUtils.isPackageInstalled(mContext,
                 "com.cherish.udfps.resources");
-        mCustomFpIconEnabled = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.OMNI_CUSTOM_FP_ICON_ENABLED, 0) == 1;
-        customIconURI = Settings.System.getStringForUser(getContext().getContentResolver(),
-                Settings.System.OMNI_CUSTOM_FP_ICON,
-                UserHandle.USER_CURRENT);
-
-        mBgProtection.setImageDrawable(mCustomUdfpsIcon ||
-                                      (!TextUtils.isEmpty(customIconURI) && mCustomFpIconEnabled)
+        mBgProtection.setImageDrawable(mCustomUdfpsIcon
                 ? mFingerprintDrawable :
                 getContext().getDrawable(R.drawable.fingerprint_bg));
     }
@@ -157,8 +146,7 @@ public class UdfpsKeyguardView extends UdfpsAnimationView {
         mLockScreenFp.setTranslationX(mBurnInOffsetX);
         mLockScreenFp.setTranslationY(mBurnInOffsetY);
         mLockScreenFp.setProgress(1f - mInterpolatedDarkAmount);
-        mLockScreenFp.setAlpha(mCustomUdfpsIcon ||
-                  (!TextUtils.isEmpty(customIconURI) && mCustomFpIconEnabled) ? 0.0f
+        mLockScreenFp.setAlpha(mCustomUdfpsIcon ? 0.0f
                 : (1f - mInterpolatedDarkAmount) * 255);
     }
 
@@ -194,8 +182,7 @@ public class UdfpsKeyguardView extends UdfpsAnimationView {
     @Override
     protected int updateAlpha() {
         int alpha = super.updateAlpha();
-        mLockScreenFp.setAlpha(mCustomUdfpsIcon ||
-              (!TextUtils.isEmpty(customIconURI) && mCustomFpIconEnabled) ? 0.0f : alpha / 255f);
+        mLockScreenFp.setAlpha(mCustomUdfpsIcon ? 0.0f : alpha / 255f);
         if (mInterpolatedDarkAmount != 0f) {
             mBgProtection.setAlpha(1f - mInterpolatedDarkAmount);
         } else {
-- 
2.17.1

